<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:EmberWpfCore.Converters">
    <SolidColorBrush x:Key="ThemeBrush" Color="#4b367c" />
    <SolidColorBrush x:Key="ForeBrush" Color="#101010" />
    <SolidColorBrush x:Key="ForeDescBrush" Color="#9f9f9f" />

    <SolidColorBrush x:Key="ButtonBrush" Color="#dddddd" />
    <SolidColorBrush x:Key="ButtonHoverBrush" Color="#e0e0e0" />
    <SolidColorBrush x:Key="ButtonPressedBrush" Color="#d0d0d0" />

    <QuinticEase x:Key="QuinticEaseInOut" EasingMode="EaseInOut" />
    <QuinticEase x:Key="QuinticEaseOut" EasingMode="EaseOut" />
    <CubicEase x:Key="CubicEaseEaseOut" EasingMode="EaseOut" />

    <!--  Normal Button Style  -->
    <Style x:Key="UwpButton" TargetType="Button">
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Padding" Value="15,7" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Foreground" Value="{StaticResource ForeBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource ButtonBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid
                        x:Name="MainGrid"
                        Background="{TemplateBinding Background}"
                        RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Border
                            x:Name="Border"
                            BorderBrush="#969696"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="Hidden" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Visibility" Value="Hidden" />
                            <Setter Property="Background" Value="{StaticResource ButtonPressedBrush}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="MainGrid" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource QuinticEaseInOut}"
                                            To="0.98"
                                            Duration="0:0:0.0" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="MainGrid" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource QuinticEaseInOut}"
                                            To="0.98"
                                            Duration="0:0:0.0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="MainGrid" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource QuinticEaseInOut}"
                                            To="1"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="MainGrid" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource QuinticEaseInOut}"
                                            To="1"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Visibility" Value="Hidden" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <!--  Normal CheckBox Style  -->
    <Style x:Key="CommonCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource ForeBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border
                            x:Name="Icon"
                            Width="16"
                            Height="16"
                            Background="{StaticResource ThemeBrush}"
                            BorderBrush="{StaticResource ThemeBrush}"
                            CornerRadius="3">
                            <Border
                                x:Name="IconInner"
                                Width="6"
                                Height="10"
                                BorderBrush="White"
                                BorderThickness="0,0,2,2"
                                RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="45" />
                                        <TranslateTransform Y="-1.5" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Border>
                        <TextBlock
                            Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{TemplateBinding Content,
                                                         Converter={StaticResource NullToVisibilityConverter}}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Icon" Property="Background" Value="{StaticResource ButtonPressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Icon" Property="Background" Value="{StaticResource ThemeBrush}" />
                            <Setter TargetName="Icon" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Icon" Property="Background" Value="Transparent" />
                            <Setter TargetName="IconInner" Property="Opacity" Value="0" />
                            <Setter TargetName="Icon" Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Scroll CheckBox  -->
    <Style x:Key="UwpScrollCheckBox" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#303030" />
        <Setter Property="BorderBrush" Value="#303030" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Grid>
                            <Border
                                x:Name="Border1"
                                Width="44"
                                Height="20"
                                Padding="3,0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="2"
                                CornerRadius="10" />
                            <Border
                                x:Name="Border"
                                Width="44"
                                Height="20"
                                Padding="3,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="8">
                                <Ellipse
                                    x:Name="Icon"
                                    Width="10"
                                    Height="10"
                                    Margin="1,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Fill="{TemplateBinding BorderBrush}">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform X="0" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                        </Grid>
                        <TextBlock
                            x:Name="txt"
                            Margin="10,0,0,0"
                            VerticalAlignment="Center"
                            FontSize="14"
                            Foreground="{TemplateBinding Foreground}"
                            Text="关"
                            Visibility="Collapsed" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource CubicEaseEaseOut}"
                                            Storyboard.TargetName="Icon"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            To="24"
                                            Duration="00:00:0.2" />
                                        <ColorAnimation
                                            EasingFunction="{StaticResource CubicEaseEaseOut}"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="#4b96Ec"
                                            Duration="00:00:0" />
                                        <ColorAnimation
                                            EasingFunction="{StaticResource CubicEaseEaseOut}"
                                            Storyboard.TargetName="Border1"
                                            Storyboard.TargetProperty="BorderBrush.Color"
                                            To="#4b96Ec"
                                            Duration="00:00:0" />
                                        <ColorAnimation
                                            EasingFunction="{StaticResource CubicEaseEaseOut}"
                                            Storyboard.TargetName="Icon"
                                            Storyboard.TargetProperty="Fill.Color"
                                            To="White"
                                            Duration="00:00:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource CubicEaseEaseOut}"
                                            Storyboard.TargetName="Icon"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            To="0"
                                            Duration="00:00:0.2" />
                                        <ColorAnimation
                                            EasingFunction="{StaticResource CubicEaseEaseOut}"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="Transparent"
                                            Duration="00:00:0" />
                                        <ColorAnimation
                                            EasingFunction="{StaticResource CubicEaseEaseOut}"
                                            Storyboard.TargetName="Border1"
                                            Storyboard.TargetProperty="BorderBrush.Color"
                                            To="#303030"
                                            Duration="00:00:0" />
                                        <ColorAnimation
                                            EasingFunction="{StaticResource CubicEaseEaseOut}"
                                            Storyboard.TargetName="Icon"
                                            Storyboard.TargetProperty="Fill.Color"
                                            To="#303030"
                                            Duration="00:00:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="txt" Property="Text" Value="开" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#616161" />
                            <Setter TargetName="Border1" Property="BorderBrush" Value="#616161" />
                            <Setter TargetName="Icon" Property="Fill" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="false" />
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#4b96Ec" />
                            <Setter TargetName="Border1" Property="BorderBrush" Value="#4b96Ec" />
                            <Setter TargetName="Icon" Property="Fill" Value="White" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="false" />
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter TargetName="Border1" Property="BorderBrush" Value="#303030" />
                            <Setter TargetName="Icon" Property="Fill" Value="#303030" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  TextBox Style  -->
    <Style x:Key="UwpTextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderBrush" Value="#999999" />
        <Setter Property="Padding" Value="5,3" />
        <Setter Property="Height" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" Value="#FDFDFD" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--  ComboBox Style  -->
    <!--  ComboBoxItem Style  -->
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,1" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border
                        Name="Back"
                        Background="Transparent"
                        BorderBrush="#FF6A6A6A"
                        BorderThickness="0,0,0,0">
                        <ContentPresenter
                            Margin="10,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            ContentSource="{Binding Source}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Back" Property="Background" Value="#D5D5D5" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Back" Property="Background" Value="#A6D8FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox ToggleButton Style  -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Border
                            x:Name="splitBorder"
                            Margin="0"
                            HorizontalAlignment="Right"
                            BorderBrush="#FF565656"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <Border
                                Width="8"
                                Height="8"
                                Margin="10,0"
                                BorderBrush="#646464"
                                BorderThickness="1,1,0,0"
                                RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="-135" />
                                        <TranslateTransform Y="-3" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="#CCCCCC" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox Style  -->
    <Style x:Key="UwpComboBox" TargetType="ComboBox">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#999999" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle}" />
        <Setter Property="Padding" Value="5,3" />
        <Setter Property="Height" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="#FDFDFD" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="None">
                            <Grid
                                MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Margin="30,5,30,30">
                                <Border
                                    x:Name="dropDownBorder"
                                    Padding="1,4"
                                    Background="#E7E7E7"
                                    BorderBrush="#CACACA"
                                    BorderThickness="1">
                                    <Border.Effect>
                                        <DropShadowEffect
                                            BlurRadius="30"
                                            Direction="-90"
                                            Opacity="0.3"
                                            ShadowDepth="10"
                                            Color="Black" />
                                    </Border.Effect>
                                </Border>
                                <Border
                                    Padding="1,4"
                                    Background="#E7E7E7"
                                    BorderBrush="#CACACA"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Continue" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Grid>

                        </Popup>
                        <Border
                            Grid.ColumnSpan="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ToggleButton
                                    x:Name="toggleButton"
                                    Grid.ColumnSpan="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ComboBoxToggleButton}" />
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    IsHitTestVisible="false"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="#666666" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                        <Trigger Property="IsDropDownOpen" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="dropDownBorder" Storyboard.TargetProperty="Effect.BlurRadius">
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource QuinticEaseOut}"
                                            From="0"
                                            To="30"
                                            Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Navigation RadioButton Style  -->
    <!--
    <Style TargetType="{x:Type customControls:NavRadio}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:NavRadio}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>